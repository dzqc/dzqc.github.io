<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C++实现计算器</title>
    <url>/2020/08/09/C-%E5%AE%9E%E7%8E%B0%E8%AE%A1%E7%AE%97%E5%99%A8/</url>
    <content><![CDATA[<p>C++实现简易计算器</p>
<a id="more"></a>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">200</span>];<span class="comment">//保存表达式字符串 </span></span><br><span class="line"><span class="keyword">int</span> mat[][<span class="number">5</span>]=&#123;<span class="comment">//设置优先级1表示优先级较大，0表示较小 </span></span><br><span class="line"> <span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"> <span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"> <span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"> <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"> <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"> </span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; op;<span class="comment">//运算符栈 </span></span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">double</span>&gt; in;<span class="comment">//数字栈 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getOp</span><span class="params">(<span class="keyword">bool</span> &amp;reto,<span class="keyword">int</span> &amp;retn,<span class="keyword">int</span> &amp;i)</span></span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(i==<span class="number">0</span>&amp;&amp;op.empty()==<span class="literal">true</span>)&#123;</span><br><span class="line"> reto=<span class="literal">true</span>;</span><br><span class="line"> retn=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">return</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(str[i]==<span class="number">0</span>)&#123;</span><br><span class="line"> reto=<span class="literal">true</span>;</span><br><span class="line"> retn=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">return</span>; </span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">if</span>(str[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;str[i]&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"> reto=<span class="literal">false</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> reto=<span class="literal">true</span>;</span><br><span class="line"> <span class="keyword">if</span>(str[i]==<span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">  retn=<span class="number">1</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">  retn=<span class="number">2</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">  retn=<span class="number">3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">  retn=<span class="number">4</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> i+=<span class="number">2</span>;</span><br><span class="line"> <span class="keyword">return</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> retn=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">for</span>(;str[i]!=<span class="string">&#x27; &#x27;</span>&amp;&amp;str[i]!=<span class="number">0</span>;i++)&#123;</span><br><span class="line"> retn*=<span class="number">10</span>;</span><br><span class="line"> retn+=str[i]-<span class="string">&#x27;0&#x27;</span>; </span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(str[i]==<span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line"> i++;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">while</span>(gets(str))&#123;</span><br><span class="line"> <span class="keyword">if</span>(str[<span class="number">0</span>]==<span class="string">&#x27;0&#x27;</span>&amp;&amp;str[<span class="number">1</span>]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line"> <span class="keyword">bool</span> retop;<span class="keyword">int</span> retnum;</span><br><span class="line"> <span class="keyword">int</span> idx=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">while</span>(!op.empty()) op.pop();</span><br><span class="line"> <span class="keyword">while</span>(!in.empty()) in.pop();</span><br><span class="line"> <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">  getOp(retop,retnum,idx);</span><br><span class="line">  <span class="keyword">if</span>(retop==<span class="literal">false</span>)&#123;</span><br><span class="line">  in.push((<span class="keyword">double</span>)retnum);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">double</span> tmp;</span><br><span class="line">  <span class="keyword">if</span>(op.empty()==<span class="literal">true</span>||mat[retnum][op.top()]==<span class="number">1</span>)&#123;</span><br><span class="line">   op.push(retnum);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">while</span>(mat[retnum][op.top()]==<span class="number">0</span>)&#123;</span><br><span class="line">   <span class="keyword">int</span> ret=op.top();</span><br><span class="line">   op.pop();</span><br><span class="line">   <span class="keyword">double</span> b=in.top();</span><br><span class="line">   in.pop();</span><br><span class="line">   <span class="keyword">double</span> a=in.top();</span><br><span class="line">   in.pop();</span><br><span class="line">   <span class="keyword">if</span>(ret==<span class="number">1</span>) tmp=a+b;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>(ret==<span class="number">2</span>) tmp=a-b;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>(ret==<span class="number">3</span>) tmp=a*b;</span><br><span class="line">   <span class="keyword">else</span> tmp=a/b;</span><br><span class="line">   in.push(tmp);</span><br><span class="line">   &#125;</span><br><span class="line">   op.push(retnum);</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(op.<span class="built_in">size</span>()==<span class="number">2</span>&amp;&amp;op.top()==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,in.top());</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++简介</title>
    <url>/2020/08/09/C-%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<p>#C++简介，请点击下方阅读全文</p>
<a id="more"></a>
<p> C++是C语言的继承，它既可以进行C语言的过程化程序设计，又可以进行以抽象数据类型为特点的基于对象的程序设计，还可以进行以继承和多态为特点的面向对象的程序设计。C++擅长面向对象程序设计的同时，还可以进行基于过程的程序设计，因而C++就适应的问题规模而论，大小由之。C++不仅拥有计算机高效运行的实用性特征，同时还致力于提高大规模程序的编程质量与程序设计语言的问题描述能力。</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/08/09/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<p>请点击下方阅读更多</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
